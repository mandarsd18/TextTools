{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web developmement\\\\Projects\\\\React practice\\\\practicefive\\\\src\\\\Components\\\\Hero.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../Css/Hero.css\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Hero = () => {\n  _s();\n  const [text, settext] = useState(\"\");\n  const convertCap = () => {\n    const newtext = text.toUpperCase();\n    settext(newtext);\n  };\n  const change = event => {\n    settext(event.target.value);\n  };\n  const convertlow = () => {\n    const newtext = text.toLowerCase();\n    settext(newtext);\n  };\n  const generatePdf = () => {\n    const input = document.getElementById(\"preview\");\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF(\"p\", \"pt\", \"a4\", false);\n      pdf.addImage(imgData, \"PNG\", 0, 0, 600, 0, undefined, false);\n      // pdf.output('dataurlnewwindow');\n      pdf.save(\"download.pdf\");\n    });\n  };\n  const removeSpace = () => {\n    const newWord = text.split(/[ ]+/);\n    settext(newWord.join(\" \"));\n  };\n  const textToSpeech = () => {\n    let utterance = new SpeechSynthesisUtterance(text);\n    speechSynthesis.speak(utterance);\n  };\n  const clearText = () => {\n    settext(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-area\",\n          placeholder: \"Enter the text here\",\n          onChange: change,\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: convertCap,\n          children: \"Convert Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: convertlow,\n          children: \"Convert smaller\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: removeSpace,\n          children: \"Remove Extra space\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: textToSpeech,\n          children: \"Speak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearText,\n          children: \"Clear Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"words\",\n        children: [text.split(/\\s+/).length, \" words and \", text.length, \" character\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sec\",\n        children: [0.008 * text.split(/\\s+/).length, \" min to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"preview\",\n        id: \"preview\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"downloadBtn\",\n        onClick: generatePdf,\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Hero, \"CpJ+aDFQa4ocOyN/cDS5MS0XypA=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useState","jsPDF","html2canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","Hero","_s","text","settext","convertCap","newtext","toUpperCase","change","event","target","value","convertlow","toLowerCase","generatePdf","input","document","getElementById","then","canvas","imgData","toDataURL","pdf","addImage","undefined","save","removeSpace","newWord","split","join","textToSpeech","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","clearText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","length","id","_c","$RefreshReg$"],"sources":["D:/Web developmement/Projects/React practice/practicefive/src/Components/Hero.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../Css/Hero.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nconst Hero = () => {\r\n  const [text, settext] = useState(\"\");\r\n\r\n  const convertCap = () => {\r\n    const newtext = text.toUpperCase();\r\n    settext(newtext);\r\n  };\r\n  const change = (event) => {\r\n    settext(event.target.value);\r\n  };\r\n  const convertlow = () => {\r\n    const newtext = text.toLowerCase();\r\n    settext(newtext);\r\n  };\r\n\r\n  const generatePdf = () => {\r\n    const input = document.getElementById(\"preview\");\r\n    html2canvas(input).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"p\", \"pt\", \"a4\", false);\r\n      pdf.addImage(imgData, \"PNG\", 0, 0, 600, 0, undefined, false);\r\n      // pdf.output('dataurlnewwindow');\r\n      pdf.save(\"download.pdf\");\r\n    });\r\n  };\r\n\r\n  const removeSpace = () => {\r\n    const newWord = text.split(/[ ]+/);\r\n    settext(newWord.join(\" \"));\r\n  };\r\n\r\n  const textToSpeech = () => {\r\n    let utterance = new SpeechSynthesisUtterance(text);\r\n    speechSynthesis.speak(utterance);\r\n  };\r\n\r\n const clearText=()=>{\r\n  settext(\"\")\r\n }\r\n  return (\r\n    <>\r\n      <div className=\"hero-section\">\r\n        <h1>Text Analyzer</h1>\r\n        <div className=\"container\">\r\n          <textarea\r\n            className=\"text-area\"\r\n            placeholder=\"Enter the text here\"\r\n            onChange={change}\r\n            value={text}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"btn-container\">\r\n          <button onClick={convertCap}>Convert Capital</button>\r\n          <button onClick={convertlow}>Convert smaller</button>\r\n          <button onClick={removeSpace}>Remove Extra space</button>\r\n          <button onClick={textToSpeech}>Speak</button>\r\n          <button onClick={clearText}>Clear Text</button>\r\n         \r\n        </div>\r\n\r\n        <p className=\"words\">\r\n          {text.split(/\\s+/).length} words and {text.length} character\r\n        </p>\r\n        <p className=\"sec\">{0.008 * text.split(/\\s+/).length} min to read</p>\r\n        <h2>Preview</h2>\r\n        <p className=\"preview\" id=\"preview\">\r\n          {text}\r\n        </p>\r\n        <button className=\"downloadBtn\" onClick={generatePdf}>\r\n          Download PDF\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}